{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setError(null);\n    setIsLoading(true);\n    const response = await fetch('api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.msg);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","msg","localStorage","setItem","type","payload"],"sources":["C:/Users/imaji/OneDrive/Desktop/MERN Stack/client/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\n\r\nexport const useLogin = () => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const login = async (email, password) => {\r\n\r\n        setError(null);\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch('api/user/login', {\r\n\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email, password })\r\n\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false);\r\n            setError(json.msg);\r\n        }\r\n\r\n\r\n\r\n        if (response.ok) {\r\n\r\n            localStorage.setItem('user', JSON.stringify(json));\r\n            dispatch({ type: 'LOGIN', payload: json })\r\n            setIsLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return { login, isLoading, error }\r\n\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,KAAK,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IAErCN,QAAQ,CAAC,IAAI,CAAC;IACdE,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;MAE3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAE5C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACE,GAAG,CAAC;IACtB;IAIA,IAAIT,QAAQ,CAACQ,EAAE,EAAE;MAEbE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDX,QAAQ,CAAC;QAAEgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;MAC1CZ,YAAY,CAAC,KAAK,CAAC;IACvB;EAGJ,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AAEtC,CAAC;AAAA,GA1CYD,QAAQ;EAAA,QAIID,cAAc;AAAA"},"metadata":{},"sourceType":"module"}