{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await ('fetch/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.msg);\n    }\n    if (response.ok) {\n      // ! save jtw to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // ! update authContext \n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","method","headers","body","JSON","stringify","json","ok","msg","localStorage","setItem","type","payload"],"sources":["C:/Users/imaji/OneDrive/Desktop/MERN Stack/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const signup = async (email, password) => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const response = await ('fetch/user/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email, password })\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false);\r\n            setError(json.msg);\r\n        }\r\n\r\n        if (response.ok) {\r\n            // ! save jtw to local storage\r\n            localStorage.setItem('user', JSON.stringify(json));\r\n\r\n\r\n            // ! update authContext \r\n            dispatch({ type: 'LOGIN', payload: json });\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return { signup, isLoading, error }\r\n\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,MAAM,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IAEtCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,OAAO,mBAAmB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;IAElC,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MACdZ,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACa,IAAI,CAACE,GAAG,CAAC;IACtB;IAEA,IAAIR,QAAQ,CAACO,EAAE,EAAE;MACb;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAGlD;MACAV,QAAQ,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;MAC1CX,YAAY,CAAC,KAAK,CAAC;IACvB;EAEJ,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AAEvC,CAAC;AAAA,GAvCYD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module"}